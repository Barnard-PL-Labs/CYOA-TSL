initially assume{
    ! inCave;
    ! inMarket;
    ! inTown;    
}

always assume {
    ! (inCave && inMarket && inTown);
    [passage <- toCave()] <-> X inCave;
    [passage <- toMarket()] -> F inMarket;
    [passage <- toTown()] -> F inTown;
}

guarantee {
    (! (inCave)) W (inMarket);
    (! (inCave)) W (inTown);
}

always guarantee {
     F inCave;
     F inMarket;
     F inTown;
}